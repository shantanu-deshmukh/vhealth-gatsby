{"version":3,"file":"component---src-pages-index-tsx-6f93e325eb009af8347f.js","mappings":"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","sources":["webpack://vhealth-gatsby/../src/image-utils.ts","webpack://vhealth-gatsby/../src/components/hooks.ts","webpack://vhealth-gatsby/../src/components/layout-wrapper.tsx","webpack://vhealth-gatsby/../src/components/picture.tsx","webpack://vhealth-gatsby/../src/components/placeholder.tsx","webpack://vhealth-gatsby/../src/components/main-image.tsx","webpack://vhealth-gatsby/../src/components/gatsby-image.server.tsx","webpack://vhealth-gatsby/../src/components/gatsby-image.browser.tsx","webpack://vhealth-gatsby/../src/components/static-image.server.tsx","webpack://vhealth-gatsby/../src/components/static-image.tsx","webpack://vhealth-gatsby/./node_modules/camelcase/index.js","webpack://vhealth-gatsby/./node_modules/@mui/icons-material/ArrowRightAlt.js","webpack://vhealth-gatsby/./src/components/image.tsx","webpack://vhealth-gatsby/./src/components/hero.tsx","webpack://vhealth-gatsby/./node_modules/@mui/material/Card/cardClasses.js","webpack://vhealth-gatsby/./node_modules/@mui/material/Card/Card.js","webpack://vhealth-gatsby/./node_modules/@mui/material/CardContent/cardContentClasses.js","webpack://vhealth-gatsby/./node_modules/@mui/material/CardContent/CardContent.js","webpack://vhealth-gatsby/./src/components/service-card.tsx","webpack://vhealth-gatsby/./node_modules/@mui/material/Divider/dividerClasses.js","webpack://vhealth-gatsby/./node_modules/@mui/material/Divider/Divider.js","webpack://vhealth-gatsby/./src/components/bar.tsx","webpack://vhealth-gatsby/./src/components/services.tsx","webpack://vhealth-gatsby/./src/components/about-panel.tsx","webpack://vhealth-gatsby/./node_modules/@mui/material/CardActions/cardActionsClasses.js","webpack://vhealth-gatsby/./node_modules/@mui/material/CardActions/CardActions.js","webpack://vhealth-gatsby/./src/components/article-card.tsx","webpack://vhealth-gatsby/./src/components/articles.tsx","webpack://vhealth-gatsby/./node_modules/@mui/private-theming/useTheme/ThemeContext.js","webpack://vhealth-gatsby/./node_modules/@mui/private-theming/useTheme/useTheme.js","webpack://vhealth-gatsby/./node_modules/@mui/private-theming/ThemeProvider/nested.js","webpack://vhealth-gatsby/./node_modules/@mui/private-theming/ThemeProvider/ThemeProvider.js","webpack://vhealth-gatsby/./node_modules/@mui/system/esm/GlobalStyles/GlobalStyles.js","webpack://vhealth-gatsby/./node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js","webpack://vhealth-gatsby/./node_modules/@mui/system/esm/ThemeProvider/useLayerOrder.js","webpack://vhealth-gatsby/./node_modules/@mui/material/styles/ThemeProvider.js","webpack://vhealth-gatsby/./node_modules/@mui/material/GlobalStyles/GlobalStyles.js","webpack://vhealth-gatsby/./node_modules/@mui/material/CssBaseline/CssBaseline.js","webpack://vhealth-gatsby/./src/theme.tsx","webpack://vhealth-gatsby/./src/components/apps-panel.tsx","webpack://vhealth-gatsby/./src/pages/index.tsx","webpack://vhealth-gatsby/./node_modules/@mui/icons-material/ArrowDownward.js"],"sourcesContent":["import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height='${height}'%20width='${width}'%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst UPPERCASE = /[\\p{Lu}]/u;\nconst LOWERCASE = /[\\p{Ll}]/u;\nconst LEADING_CAPITAL = /^[\\p{Lu}](?![\\p{Lu}])/gu;\nconst IDENTIFIER = /([\\p{Alpha}\\p{N}_]|$)/u;\nconst SEPARATORS = /[_.\\- ]+/;\n\nconst LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);\nconst SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');\nconst NUMBERS_AND_IDENTIFIER = new RegExp('\\\\d+' + IDENTIFIER.source, 'gu');\n\nconst preserveCamelCase = (string, toLowerCase, toUpperCase) => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && UPPERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst preserveConsecutiveUppercase = (input, toLowerCase) => {\n\tLEADING_CAPITAL.lastIndex = 0;\n\n\treturn input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));\n};\n\nconst postProcess = (input, toUpperCase) => {\n\tSEPARATORS_AND_IDENTIFIER.lastIndex = 0;\n\tNUMBERS_AND_IDENTIFIER.lastIndex = 0;\n\n\treturn input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))\n\t\t.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = {\n\t\tpascalCase: false,\n\t\tpreserveConsecutiveUppercase: false,\n\t\t...options\n\t};\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tconst toLowerCase = options.locale === false ?\n\t\tstring => string.toLowerCase() :\n\t\tstring => string.toLocaleLowerCase(options.locale);\n\tconst toUpperCase = options.locale === false ?\n\t\tstring => string.toUpperCase() :\n\t\tstring => string.toLocaleUpperCase(options.locale);\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? toUpperCase(input) : toLowerCase(input);\n\t}\n\n\tconst hasUpperCase = input !== toLowerCase(input);\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input, toLowerCase, toUpperCase);\n\t}\n\n\tinput = input.replace(LEADING_SEPARATORS, '');\n\n\tif (options.preserveConsecutiveUppercase) {\n\t\tinput = preserveConsecutiveUppercase(input, toLowerCase);\n\t} else {\n\t\tinput = toLowerCase(input);\n\t}\n\n\tif (options.pascalCase) {\n\t\tinput = toUpperCase(input.charAt(0)) + input.slice(1);\n\t}\n\n\treturn postProcess(input, toUpperCase);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M16.01 11H4v2h12.01v3L20 12l-3.99-4z\"\n}), 'ArrowRightAlt');","import React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\ninterface ImageProps {\n  filename: string\n  alt: string\n}\n\nconst Image: React.FC<ImageProps> = ({ filename, alt }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      images: allFile(filter: { sourceInstanceName: { eq: \"images\" } }) {\n        edges {\n          node {\n            relativePath\n            name\n            childImageSharp {\n              gatsbyImageData(width: 600, layout: CONSTRAINED)\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  const image = data.images.edges.find((n: any) => {\n    return (\n      n.node.relativePath === filename ||\n      n.node.name === filename.replace(/\\.[^/.]+$/, \"\")\n    )\n  })\n\n  if (!image) {\n    console.warn(`Image not found: ${filename}`)\n    return (\n      <div\n        style={{\n          width: 100,\n          height: 100,\n          backgroundColor: \"#f0f0f0\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <span style={{ fontSize: \"12px\", color: \"#666\" }}>Image not found</span>\n      </div>\n    )\n  }\n\n  const gatsbyImage = getImage(image.node.childImageSharp)\n  if (!gatsbyImage) {\n    console.warn(`Gatsby image not generated for: ${filename}`)\n    return (\n      <div\n        style={{\n          width: 100,\n          height: 100,\n          backgroundColor: \"#f0f0f0\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        <span style={{ fontSize: \"12px\", color: \"#666\" }}>Image error</span>\n      </div>\n    )\n  }\n\n  return <GatsbyImage image={gatsbyImage} alt={alt || \"\"} />\n}\n\nexport default Image\n","import React from \"react\"\nimport Grid from \"@mui/material/Grid\"\nimport Typography from \"@mui/material/Typography\"\nimport Button from \"@mui/material/Button\"\nimport Image from \"./image\"\nimport Hidden from \"@mui/material/Hidden\"\nimport { useTheme } from \"@mui/material/styles\"\nimport { useMediaQuery } from \"@mui/material\"\n\nconst Hero = () => {\n  const theme = useTheme()\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"))\n\n  const handleConsultClick = () => {\n    console.log(\"Consult Today button clicked\")\n    alert(\"Consultation feature coming soon!\")\n  }\n\n  return (\n    <Grid\n      container\n      spacing={isMobile ? 2 : 3}\n      style={{\n        minHeight: isMobile ? 400 : 500,\n        padding: isMobile ? \"20px 10px\" : \"40px 20px\",\n      }}\n    >\n      <Grid\n        item={true}\n        xs={12}\n        sm={6}\n        container\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        alignItems={isMobile ? \"center\" : \"flex-start\"}\n        style={{\n          paddingLeft: isMobile ? 20 : 40,\n          paddingRight: isMobile ? 20 : 40,\n          textAlign: isMobile ? \"center\" : \"left\",\n        }}\n      >\n        <Typography\n          variant=\"h4\"\n          color=\"inherit\"\n          style={{\n            marginBottom: 20,\n            fontSize: isMobile ? \"1.75rem\" : \"2.125rem\",\n          }}\n        >\n          Virtual Healthcare for you\n        </Typography>\n\n        <Typography\n          variant=\"subtitle1\"\n          style={{\n            marginBottom: 30,\n            fontSize: isMobile ? \"1rem\" : \"1.25rem\",\n          }}\n        >\n          We provide progressive, and affordable healthcare, accessible on\n          mobile and online for everyone\n        </Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          size={isMobile ? \"medium\" : \"large\"}\n          onClick={handleConsultClick}\n        >\n          Consult Today\n        </Button>\n      </Grid>\n      <Hidden xsDown>\n        <Grid\n          item={true}\n          sm={6}\n          container\n          flexDirection=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"flex-start\"\n          style={{ padding: 10 }}\n        >\n          <div style={{ width: \"100%\" }}>\n            <Image alt=\"Virtual Healthcare for you\" filename=\"hero-image.png\" />\n          </div>\n        </Grid>\n      </Hidden>\n    </Grid>\n  )\n}\n\nexport default Hero\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardUtilityClass(slot) {\n  return generateUtilityClass('MuiCard', slot);\n}\nconst cardClasses = generateUtilityClasses('MuiCard', ['root']);\nexport default cardClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"raised\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport Paper from '../Paper';\nimport { getCardUtilityClass } from './cardClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardUtilityClass, classes);\n};\nconst CardRoot = styled(Paper, {\n  name: 'MuiCard',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    overflow: 'hidden'\n  };\n});\nconst Card = /*#__PURE__*/React.forwardRef(function Card(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCard'\n  });\n  const {\n      className,\n      raised = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    raised\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardRoot, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : undefined,\n    ref: ref,\n    ownerState: ownerState\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the card will use raised styling.\n   * @default false\n   */\n  raised: chainPropTypes(PropTypes.bool, props => {\n    if (props.raised && props.variant === 'outlined') {\n      return new Error('MUI: Combining `raised={true}` with `variant=\"outlined\"` has no effect.');\n    }\n    return null;\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Card;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardContentUtilityClass(slot) {\n  return generateUtilityClass('MuiCardContent', slot);\n}\nconst cardContentClasses = generateUtilityClasses('MuiCardContent', ['root']);\nexport default cardContentClasses;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"className\", \"component\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardContentUtilityClass } from './cardContentClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getCardContentUtilityClass, classes);\n};\nconst CardContentRoot = styled('div', {\n  name: 'MuiCardContent',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(() => {\n  return {\n    padding: 16,\n    '&:last-child': {\n      paddingBottom: 24\n    }\n  };\n});\nconst CardContent = /*#__PURE__*/React.forwardRef(function CardContent(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardContent'\n  });\n  const {\n      className,\n      component = 'div'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    component\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardContentRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardContent.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardContent;","import React from \"react\"\nimport Card from \"@mui/material/Card\"\nimport CardContent from \"@mui/material/CardContent\"\nimport Typography from \"@mui/material/Typography\"\nimport Image from \"./image\"\n\ninterface IProps {\n  service: Service\n}\n\ninterface Service {\n  title: string\n  image: string\n  description: string\n}\n\nconst ServiceCard = ({ service, ...props }: IProps) => {\n  return (\n    <Card>\n      <CardContent style={{ textAlign: \"start\", minHeight: 200 }}>\n        <div style={{ width: 80, padding: 10 }}>\n          <Image alt={service.title} filename={service.image} />\n        </div>\n        <Typography variant=\"h6\" color=\"inherit\">\n          {service.title}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {service.description}\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\nexport default ServiceCard\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getDividerUtilityClass(slot) {\n  return generateUtilityClass('MuiDivider', slot);\n}\nconst dividerClasses = generateUtilityClasses('MuiDivider', ['root', 'absolute', 'fullWidth', 'inset', 'middle', 'flexItem', 'light', 'vertical', 'withChildren', 'withChildrenVertical', 'textAlignRight', 'textAlignLeft', 'wrapper', 'wrapperVertical']);\nexport default dividerClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"absolute\", \"children\", \"className\", \"component\", \"flexItem\", \"light\", \"orientation\", \"role\", \"textAlign\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getDividerUtilityClass } from './dividerClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    absolute,\n    children,\n    classes,\n    flexItem,\n    light,\n    orientation,\n    textAlign,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', absolute && 'absolute', variant, light && 'light', orientation === 'vertical' && 'vertical', flexItem && 'flexItem', children && 'withChildren', children && orientation === 'vertical' && 'withChildrenVertical', textAlign === 'right' && orientation !== 'vertical' && 'textAlignRight', textAlign === 'left' && orientation !== 'vertical' && 'textAlignLeft'],\n    wrapper: ['wrapper', orientation === 'vertical' && 'wrapperVertical']\n  };\n  return composeClasses(slots, getDividerUtilityClass, classes);\n};\nconst DividerRoot = styled('div', {\n  name: 'MuiDivider',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.absolute && styles.absolute, styles[ownerState.variant], ownerState.light && styles.light, ownerState.orientation === 'vertical' && styles.vertical, ownerState.flexItem && styles.flexItem, ownerState.children && styles.withChildren, ownerState.children && ownerState.orientation === 'vertical' && styles.withChildrenVertical, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && styles.textAlignRight, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && styles.textAlignLeft];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0,\n  // Reset browser default style.\n  flexShrink: 0,\n  borderWidth: 0,\n  borderStyle: 'solid',\n  borderColor: (theme.vars || theme).palette.divider,\n  borderBottomWidth: 'thin'\n}, ownerState.absolute && {\n  position: 'absolute',\n  bottom: 0,\n  left: 0,\n  width: '100%'\n}, ownerState.light && {\n  borderColor: theme.vars ? `rgba(${theme.vars.palette.dividerChannel} / 0.08)` : alpha(theme.palette.divider, 0.08)\n}, ownerState.variant === 'inset' && {\n  marginLeft: 72\n}, ownerState.variant === 'middle' && ownerState.orientation === 'horizontal' && {\n  marginLeft: theme.spacing(2),\n  marginRight: theme.spacing(2)\n}, ownerState.variant === 'middle' && ownerState.orientation === 'vertical' && {\n  marginTop: theme.spacing(1),\n  marginBottom: theme.spacing(1)\n}, ownerState.orientation === 'vertical' && {\n  height: '100%',\n  borderBottomWidth: 0,\n  borderRightWidth: 'thin'\n}, ownerState.flexItem && {\n  alignSelf: 'stretch',\n  height: 'auto'\n}), ({\n  ownerState\n}) => _extends({}, ownerState.children && {\n  display: 'flex',\n  whiteSpace: 'nowrap',\n  textAlign: 'center',\n  border: 0,\n  borderTopStyle: 'solid',\n  borderLeftStyle: 'solid',\n  '&::before, &::after': {\n    content: '\"\"',\n    alignSelf: 'center'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.children && ownerState.orientation !== 'vertical' && {\n  '&::before, &::after': {\n    width: '100%',\n    borderTop: `thin solid ${(theme.vars || theme).palette.divider}`,\n    borderTopStyle: 'inherit'\n  }\n}), ({\n  theme,\n  ownerState\n}) => _extends({}, ownerState.children && ownerState.orientation === 'vertical' && {\n  flexDirection: 'column',\n  '&::before, &::after': {\n    height: '100%',\n    borderLeft: `thin solid ${(theme.vars || theme).palette.divider}`,\n    borderLeftStyle: 'inherit'\n  }\n}), ({\n  ownerState\n}) => _extends({}, ownerState.textAlign === 'right' && ownerState.orientation !== 'vertical' && {\n  '&::before': {\n    width: '90%'\n  },\n  '&::after': {\n    width: '10%'\n  }\n}, ownerState.textAlign === 'left' && ownerState.orientation !== 'vertical' && {\n  '&::before': {\n    width: '10%'\n  },\n  '&::after': {\n    width: '90%'\n  }\n}));\nconst DividerWrapper = styled('span', {\n  name: 'MuiDivider',\n  slot: 'Wrapper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.wrapper, ownerState.orientation === 'vertical' && styles.wrapperVertical];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-block',\n  paddingLeft: `calc(${theme.spacing(1)} * 1.2)`,\n  paddingRight: `calc(${theme.spacing(1)} * 1.2)`\n}, ownerState.orientation === 'vertical' && {\n  paddingTop: `calc(${theme.spacing(1)} * 1.2)`,\n  paddingBottom: `calc(${theme.spacing(1)} * 1.2)`\n}));\nconst Divider = /*#__PURE__*/React.forwardRef(function Divider(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiDivider'\n  });\n  const {\n      absolute = false,\n      children,\n      className,\n      component = children ? 'div' : 'hr',\n      flexItem = false,\n      light = false,\n      orientation = 'horizontal',\n      role = component !== 'hr' ? 'separator' : undefined,\n      textAlign = 'center',\n      variant = 'fullWidth'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    absolute,\n    component,\n    flexItem,\n    light,\n    orientation,\n    role,\n    textAlign,\n    variant\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(DividerRoot, _extends({\n    as: component,\n    className: clsx(classes.root, className),\n    role: role,\n    ref: ref,\n    ownerState: ownerState\n  }, other, {\n    children: children ? /*#__PURE__*/_jsx(DividerWrapper, {\n      className: classes.wrapper,\n      ownerState: ownerState,\n      children: children\n    }) : null\n  }));\n});\n\n/**\n * The following flag is used to ensure that this component isn't tabbable i.e.\n * does not get highlight/focus inside of MUI List.\n */\nDivider.muiSkipListHighlight = true;\nprocess.env.NODE_ENV !== \"production\" ? Divider.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Absolutely position the element.\n   * @default false\n   */\n  absolute: PropTypes.bool,\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, a vertical divider will have the correct height when used in flex container.\n   * (By default, a vertical divider will have a calculated height of `0px` if it is the child of a flex container.)\n   * @default false\n   */\n  flexItem: PropTypes.bool,\n  /**\n   * If `true`, the divider will have a lighter color.\n   * @default false\n   * @deprecated Use <Divider sx={{ opacity: 0.6 }} /> (or any opacity or color) instead. [How to migrate](/material-ui/migration/migrating-from-deprecated-apis/)\n   */\n  light: PropTypes.bool,\n  /**\n   * The component orientation.\n   * @default 'horizontal'\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n  /**\n   * @ignore\n   */\n  role: PropTypes /* @typescript-to-proptypes-ignore */.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The text alignment.\n   * @default 'center'\n   */\n  textAlign: PropTypes.oneOf(['center', 'left', 'right']),\n  /**\n   * The variant to use.\n   * @default 'fullWidth'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['fullWidth', 'inset', 'middle']), PropTypes.string])\n} : void 0;\nexport default Divider;","import React from \"react\"\nimport Box from \"@mui/material/Box\"\nimport { Divider } from \"@mui/material\"\nimport { styled } from \"@mui/material/styles\"\n\nconst StyledDivider = styled(Divider)({\n  background: \"#000\",\n  height: 2,\n  marginTop: 10,\n  marginBottom: 10,\n})\n\nconst Bar = () => {\n  return (\n    <Box style={{ width: 80 }}>\n      <StyledDivider />\n    </Box>\n  )\n}\n\nexport default Bar\n","import React from \"react\"\nimport Grid from \"@mui/material/Grid\"\nimport Typography from \"@mui/material/Typography\"\nimport Button from \"@mui/material/Button\"\nimport ServiceCard from \"./service-card\"\nimport Bar from \"./bar\"\nimport { useTheme } from \"@mui/material/styles\"\nimport { useMediaQuery } from \"@mui/material\"\n\nconst Services = () => {\n  const theme = useTheme()\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"))\n\n  const handleLearnMoreClick = () => {\n    console.log(\"Learn More button clicked\")\n    alert(\"Learn more about our services!\")\n  }\n\n  let services = [\n    {\n      id: 1,\n      image: \"search-doctor-icon.png\",\n      title: \"Search Doctor\",\n      description:\n        \"Choose your doctor from thousands of specialist, general, and trusted hospitals.\",\n    },\n    {\n      id: 2,\n      image: \"online-pharmacy-icon.png\",\n      title: \"Online Pharmacy\",\n      description:\n        \"Buy your medicines with our mobile application with a simple delivery system.\",\n    },\n    {\n      id: 3,\n      image: \"consultation-icon.png\",\n      title: \"Consultation\",\n      description:\n        \"Free consultation with our trusted doctors and get the best recommendations.\",\n    },\n    {\n      id: 4,\n      image: \"details-info-icon.png\",\n      title: \"Detail Info\",\n      description:\n        \"Free consultation with our trusted doctors and get the best recommendations.\",\n    },\n    {\n      id: 5,\n      image: \"emergency-care-icon.png\",\n      title: \"Emergency Care\",\n      description:\n        \"You can get 24/7 urgent care for yourself or your children and your lovely family.\",\n    },\n    {\n      id: 6,\n      image: \"tracking-icon.png\",\n      title: \"Tracking\",\n      description: \"Track and save your medical history and health data.\",\n    },\n  ]\n\n  return (\n    <div id=\"services\">\n      <Grid\n        container\n        spacing={isMobile ? 2 : 3}\n        style={{\n          textAlign: \"center\",\n          minHeight: 200,\n          padding: isMobile ? 20 : 40,\n        }}\n      >\n        <Grid\n          item\n          xs={12}\n          container\n          flexDirection=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Typography\n            variant=\"h5\"\n            style={{\n              fontSize: isMobile ? \"1.5rem\" : \"1.75rem\",\n              marginBottom: 10,\n            }}\n          >\n            Our Services\n          </Typography>\n          <Bar />\n          <Typography\n            variant=\"subtitle1\"\n            style={{\n              margin: isMobile ? 20 : 30,\n              fontSize: isMobile ? \"0.9rem\" : \"1rem\",\n              padding: isMobile ? \"0 10px\" : \"0 20px\",\n            }}\n          >\n            We provide to you the best choices for you. Adjust it to your health\n            needs and make sure your undergo treatment with our highly qualified\n            doctors you can consult with us which type of service is suitable\n            for your health\n          </Typography>\n        </Grid>\n\n        {services.map(service => (\n          <Grid item xs={12} sm={6} md={4} key={service.id}>\n            <ServiceCard service={service} />\n          </Grid>\n        ))}\n\n        <Grid item xs={12}>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size={isMobile ? \"medium\" : \"large\"}\n            onClick={handleLearnMoreClick}\n          >\n            Learn More\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default Services\n","import React from \"react\"\nimport Grid from \"@mui/material/Grid\"\nimport Typography from \"@mui/material/Typography\"\nimport Button from \"@mui/material/Button\"\nimport Image from \"./image\"\nimport Hidden from \"@mui/material/Hidden\"\nimport Bar from \"./bar\"\nimport { useTheme } from \"@mui/material/styles\"\nimport { useMediaQuery } from \"@mui/material\"\n\nconst AboutPanel = () => {\n  const theme = useTheme()\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"))\n\n  const handleLearnMoreClick = () => {\n    console.log(\"About Learn More button clicked\")\n    alert(\"Learn more about our healthcare providers!\")\n  }\n\n  return (\n    <Grid\n      container\n      spacing={isMobile ? 2 : 3}\n      style={{\n        minHeight: isMobile ? 400 : 500,\n        padding: isMobile ? \"20px 10px\" : \"40px 20px\",\n      }}\n    >\n      <Hidden xsDown>\n        <Grid\n          item={true}\n          sm={6}\n          container\n          flexDirection=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"flex-start\"\n          style={{ padding: 10 }}\n        >\n          <div style={{ width: \"100%\" }}>\n            <Image\n              alt=\"Virtual Healthcare for you\"\n              filename=\"about-illustration.png\"\n            />\n          </div>\n        </Grid>\n      </Hidden>\n      <Grid\n        item={true}\n        xs={12}\n        sm={6}\n        container\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        alignItems={isMobile ? \"center\" : \"flex-start\"}\n        style={{\n          paddingLeft: isMobile ? 20 : 40,\n          paddingRight: isMobile ? 20 : 40,\n          textAlign: isMobile ? \"center\" : \"left\",\n        }}\n      >\n        <Typography\n          variant=\"h4\"\n          color=\"inherit\"\n          style={{\n            fontSize: isMobile ? \"1.75rem\" : \"2.125rem\",\n            marginBottom: 10,\n          }}\n        >\n          Leading healthcare providers\n        </Typography>\n        <Bar />\n        <Typography\n          variant=\"subtitle1\"\n          style={{\n            marginBottom: 30,\n            marginTop: 20,\n            fontSize: isMobile ? \"1rem\" : \"1.25rem\",\n          }}\n        >\n          We provide progressive, and affordable healthcare, accessible on\n          mobile and online for everyone. To us, it's not just work. We take\n          pride in the solutions we deliver\n        </Typography>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n          size={isMobile ? \"medium\" : \"large\"}\n          onClick={handleLearnMoreClick}\n        >\n          Learn More\n        </Button>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default AboutPanel\n","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getCardActionsUtilityClass(slot) {\n  return generateUtilityClass('MuiCardActions', slot);\n}\nconst cardActionsClasses = generateUtilityClasses('MuiCardActions', ['root', 'spacing']);\nexport default cardActionsClasses;","'use client';\n\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"disableSpacing\", \"className\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport styled from '../styles/styled';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport { getCardActionsUtilityClass } from './cardActionsClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableSpacing\n  } = ownerState;\n  const slots = {\n    root: ['root', !disableSpacing && 'spacing']\n  };\n  return composeClasses(slots, getCardActionsUtilityClass, classes);\n};\nconst CardActionsRoot = styled('div', {\n  name: 'MuiCardActions',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.disableSpacing && styles.spacing];\n  }\n})(({\n  ownerState\n}) => _extends({\n  display: 'flex',\n  alignItems: 'center',\n  padding: 8\n}, !ownerState.disableSpacing && {\n  '& > :not(style) ~ :not(style)': {\n    marginLeft: 8\n  }\n}));\nconst CardActions = /*#__PURE__*/React.forwardRef(function CardActions(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCardActions'\n  });\n  const {\n      disableSpacing = false,\n      className\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    disableSpacing\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(CardActionsRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the actions do not have additional margin.\n   * @default false\n   */\n  disableSpacing: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default CardActions;","import React from \"react\"\nimport Card from \"@mui/material/Card\"\nimport CardContent from \"@mui/material/CardContent\"\nimport Typography from \"@mui/material/Typography\"\nimport CardActions from \"@mui/material/CardActions\"\nimport Button from \"@mui/material/Button\"\nimport Image from \"./image\"\nimport ArrowRightAltIcon from \"@mui/icons-material/ArrowRightAlt\"\n\ninterface IProps {\n  article: Article\n}\n\ninterface Article {\n  title: string\n  image: string\n  description: string\n  url: string\n}\n\nconst ArticleCard = ({ article, ...props }: IProps) => {\n  const handleReadMoreClick = () => {\n    console.log(`Read More clicked for: ${article.title}`)\n    // Add your read more logic here\n    alert(`Reading article: ${article.title}`)\n  }\n\n  return (\n    <Card>\n      <div style={{ height: 200, overflow: \"hidden\" }}>\n        <Image alt={article.title} filename={article.image} />\n      </div>\n      <CardContent style={{ textAlign: \"start\" }}>\n        <Typography variant=\"h6\" color=\"inherit\">\n          {article.title}\n        </Typography>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          {article.description}\n        </Typography>\n      </CardContent>\n      <CardActions style={{ paddingLeft: 20 }}>\n        <Button size=\"small\" color=\"primary\" onClick={handleReadMoreClick}>\n          Read More <ArrowRightAltIcon style={{ marginLeft: 5 }} />\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}\n\nexport default ArticleCard\n","import React from \"react\"\nimport Grid from \"@mui/material/Grid\"\nimport Typography from \"@mui/material/Typography\"\nimport Button from \"@mui/material/Button\"\nimport ArticleCard from \"./article-card\"\nimport Bar from \"./bar\"\nimport { useTheme } from \"@mui/material/styles\"\nimport { useMediaQuery } from \"@mui/material\"\n\nconst Articles = () => {\n  const theme = useTheme()\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"))\n\n  const handleViewAllClick = () => {\n    console.log(\"View All button clicked\")\n    alert(\"View all articles feature coming soon!\")\n  }\n\n  const articles = [\n    {\n      title: \"Disease detection, check up in the laboratory\",\n      description:\n        \"In this case, the role of the health laboratory is very important to do a disease detection...\",\n      url: \"\",\n      image: \"blog1.png\",\n    },\n    {\n      title: \"Herbal medicines that are safe for consumption\",\n      description:\n        \"Herbal medicine is very widely used at this time because of its very good for your health...\",\n      url: \"\",\n      image: \"blog2.png\",\n    },\n    {\n      title: \"Natural care for healthy facial skin\",\n      description:\n        \"A healthy lifestyle should start from now and also for your skin health. There are some...\",\n      url: \"\",\n      image: \"blog3.png\",\n    },\n  ]\n\n  return (\n    <div id=\"blog\">\n      <Grid\n        container\n        spacing={isMobile ? 2 : 3}\n        style={{\n          textAlign: \"center\",\n          padding: isMobile ? \"20px 10px\" : \"40px 20px\",\n        }}\n      >\n        <Grid\n          item\n          xs={12}\n          container\n          flexDirection=\"column\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Typography\n            variant=\"h5\"\n            style={{\n              fontSize: isMobile ? \"1.5rem\" : \"1.75rem\",\n              marginBottom: 10,\n            }}\n          >\n            Check out our latest articles\n          </Typography>\n          <Bar />\n        </Grid>\n        {articles.map(article => (\n          <Grid item xs={12} sm={6} md={4} key={article.title}>\n            <ArticleCard article={article} />\n          </Grid>\n        ))}\n\n        <Grid item xs={12}>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size={isMobile ? \"medium\" : \"large\"}\n            onClick={handleViewAllClick}\n          >\n            View All\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default Articles\n","import * as React from 'react';\nconst ThemeContext = /*#__PURE__*/React.createContext(null);\nif (process.env.NODE_ENV !== 'production') {\n  ThemeContext.displayName = 'ThemeContext';\n}\nexport default ThemeContext;","import * as React from 'react';\nimport ThemeContext from './ThemeContext';\nexport default function useTheme() {\n  const theme = React.useContext(ThemeContext);\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useDebugValue(theme);\n  }\n  return theme;\n}","const hasSymbol = typeof Symbol === 'function' && Symbol.for;\nexport default hasSymbol ? Symbol.for('mui.nested') : '__THEME_NESTED__';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { exactProp } from '@mui/utils';\nimport ThemeContext from '../useTheme/ThemeContext';\nimport useTheme from '../useTheme';\nimport nested from './nested';\n\n// To support composition of theme.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction mergeOuterLocalTheme(outerTheme, localTheme) {\n  if (typeof localTheme === 'function') {\n    const mergedTheme = localTheme(outerTheme);\n    if (process.env.NODE_ENV !== 'production') {\n      if (!mergedTheme) {\n        console.error(['MUI: You should return an object from your theme function, i.e.', '<ThemeProvider theme={() => ({})} />'].join('\\n'));\n      }\n    }\n    return mergedTheme;\n  }\n  return _extends({}, outerTheme, localTheme);\n}\n\n/**\n * This component takes a `theme` prop.\n * It makes the `theme` available down the React tree thanks to React context.\n * This component should preferably be used at **the root of your component tree**.\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme\n  } = props;\n  const outerTheme = useTheme();\n  if (process.env.NODE_ENV !== 'production') {\n    if (outerTheme === null && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const theme = React.useMemo(() => {\n    const output = outerTheme === null ? localTheme : mergeOuterLocalTheme(outerTheme, localTheme);\n    if (output != null) {\n      output[nested] = outerTheme !== null;\n    }\n    return output;\n  }, [localTheme, outerTheme]);\n  return /*#__PURE__*/_jsx(ThemeContext.Provider, {\n    value: theme,\n    children: children\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles as MuiGlobalStyles, internal_serializeStyles as serializeStyles } from '@mui/styled-engine';\nimport useTheme from '../useTheme';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction wrapGlobalLayer(styles) {\n  const serialized = serializeStyles(styles);\n  if (styles !== serialized && serialized.styles) {\n    if (!serialized.styles.match(/^@layer\\s+[^{]*$/)) {\n      // If the styles are not already wrapped in a layer, wrap them in a global layer.\n      serialized.styles = `@layer global{${serialized.styles}}`;\n    }\n    return serialized;\n  }\n  return styles;\n}\nfunction GlobalStyles({\n  styles,\n  themeId,\n  defaultTheme = {}\n}) {\n  const upperTheme = useTheme(defaultTheme);\n  const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;\n  let globalStyles = typeof styles === 'function' ? styles(resolvedTheme) : styles;\n  if (resolvedTheme.modularCssLayers) {\n    if (Array.isArray(globalStyles)) {\n      globalStyles = globalStyles.map(styleArg => {\n        if (typeof styleArg === 'function') {\n          return wrapGlobalLayer(styleArg(resolvedTheme));\n        }\n        return wrapGlobalLayer(styleArg);\n      });\n    } else {\n      globalStyles = wrapGlobalLayer(globalStyles);\n    }\n  }\n  return /*#__PURE__*/_jsx(MuiGlobalStyles, {\n    styles: globalStyles\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * @ignore\n   */\n  defaultTheme: PropTypes.object,\n  /**\n   * @ignore\n   */\n  styles: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.array, PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool]),\n  /**\n   * @ignore\n   */\n  themeId: PropTypes.string\n} : void 0;\nexport default GlobalStyles;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as MuiThemeProvider, useTheme as usePrivateTheme } from '@mui/private-theming';\nimport exactProp from '@mui/utils/exactProp';\nimport { ThemeContext as StyledEngineThemeContext } from '@mui/styled-engine';\nimport useThemeWithoutDefault from '../useThemeWithoutDefault';\nimport RtlProvider from '../RtlProvider';\nimport DefaultPropsProvider from '../DefaultPropsProvider';\nimport useLayerOrder from './useLayerOrder';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst EMPTY_THEME = {};\nfunction useThemeScoping(themeId, upperTheme, localTheme, isPrivate = false) {\n  return React.useMemo(() => {\n    const resolvedTheme = themeId ? upperTheme[themeId] || upperTheme : upperTheme;\n    if (typeof localTheme === 'function') {\n      const mergedTheme = localTheme(resolvedTheme);\n      const result = themeId ? _extends({}, upperTheme, {\n        [themeId]: mergedTheme\n      }) : mergedTheme;\n      // must return a function for the private theme to NOT merge with the upper theme.\n      // see the test case \"use provided theme from a callback\" in ThemeProvider.test.js\n      if (isPrivate) {\n        return () => result;\n      }\n      return result;\n    }\n    return themeId ? _extends({}, upperTheme, {\n      [themeId]: localTheme\n    }) : _extends({}, upperTheme, localTheme);\n  }, [themeId, upperTheme, localTheme, isPrivate]);\n}\n\n/**\n * This component makes the `theme` available down the React tree.\n * It should preferably be used at **the root of your component tree**.\n *\n * <ThemeProvider theme={theme}> // existing use case\n * <ThemeProvider theme={{ id: theme }}> // theme scoping\n */\nfunction ThemeProvider(props) {\n  const {\n    children,\n    theme: localTheme,\n    themeId\n  } = props;\n  const upperTheme = useThemeWithoutDefault(EMPTY_THEME);\n  const upperPrivateTheme = usePrivateTheme() || EMPTY_THEME;\n  if (process.env.NODE_ENV !== 'production') {\n    if (upperTheme === null && typeof localTheme === 'function' || themeId && upperTheme && !upperTheme[themeId] && typeof localTheme === 'function') {\n      console.error(['MUI: You are providing a theme function prop to the ThemeProvider component:', '<ThemeProvider theme={outerTheme => outerTheme} />', '', 'However, no outer theme is present.', 'Make sure a theme is already injected higher in the React tree ' + 'or provide a theme object.'].join('\\n'));\n    }\n  }\n  const engineTheme = useThemeScoping(themeId, upperTheme, localTheme);\n  const privateTheme = useThemeScoping(themeId, upperPrivateTheme, localTheme, true);\n  const rtlValue = engineTheme.direction === 'rtl';\n  const layerOrder = useLayerOrder(engineTheme);\n  return /*#__PURE__*/_jsx(MuiThemeProvider, {\n    theme: privateTheme,\n    children: /*#__PURE__*/_jsx(StyledEngineThemeContext.Provider, {\n      value: engineTheme,\n      children: /*#__PURE__*/_jsx(RtlProvider, {\n        value: rtlValue,\n        children: /*#__PURE__*/_jsxs(DefaultPropsProvider, {\n          value: engineTheme == null ? void 0 : engineTheme.components,\n          children: [layerOrder, children]\n        })\n      })\n    })\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired,\n  /**\n   * The design system's unique id for getting the corresponded theme when there are multiple design systems.\n   */\n  themeId: PropTypes.string\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  process.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = exactProp(ThemeProvider.propTypes) : void 0;\n}\nexport default ThemeProvider;","'use client';\n\nimport * as React from 'react';\nimport useEnhancedEffect from '@mui/utils/useEnhancedEffect';\nimport useId from '@mui/utils/useId';\nimport GlobalStyles from '../GlobalStyles';\nimport useThemeWithoutDefault from '../useThemeWithoutDefault';\n\n/**\n * This hook returns a `GlobalStyles` component that sets the CSS layer order (for server-side rendering).\n * Then on client-side, it injects the CSS layer order into the document head to ensure that the layer order is always present first before other Emotion styles.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function useLayerOrder(theme) {\n  const upperTheme = useThemeWithoutDefault();\n  const id = useId() || '';\n  const {\n    modularCssLayers\n  } = theme;\n  let layerOrder = 'mui.global, mui.components, mui.theme, mui.custom, mui.sx';\n  if (!modularCssLayers || upperTheme !== null) {\n    // skip this hook if upper theme exists.\n    layerOrder = '';\n  } else if (typeof modularCssLayers === 'string') {\n    layerOrder = modularCssLayers.replace(/mui(?!\\.)/g, layerOrder);\n  } else {\n    layerOrder = `@layer ${layerOrder};`;\n  }\n  useEnhancedEffect(() => {\n    const head = document.querySelector('head');\n    if (!head) {\n      return;\n    }\n    const firstChild = head.firstChild;\n    if (layerOrder) {\n      var _firstChild$hasAttrib;\n      // Only insert if first child doesn't have data-mui-layer-order attribute\n      if (firstChild && (_firstChild$hasAttrib = firstChild.hasAttribute) != null && _firstChild$hasAttrib.call(firstChild, 'data-mui-layer-order') && firstChild.getAttribute('data-mui-layer-order') === id) {\n        return;\n      }\n      const styleElement = document.createElement('style');\n      styleElement.setAttribute('data-mui-layer-order', id);\n      styleElement.textContent = layerOrder;\n      head.prepend(styleElement);\n    } else {\n      var _head$querySelector;\n      (_head$querySelector = head.querySelector(`style[data-mui-layer-order=\"${id}\"]`)) == null || _head$querySelector.remove();\n    }\n  }, [layerOrder, id]);\n  if (!layerOrder) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(GlobalStyles, {\n    styles: layerOrder\n  });\n}","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"theme\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { ThemeProvider as SystemThemeProvider } from '@mui/system';\nimport THEME_ID from './identifier';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ThemeProvider(_ref) {\n  let {\n      theme: themeInput\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const scopedTheme = themeInput[THEME_ID];\n  let finalTheme = scopedTheme || themeInput;\n  if (typeof themeInput !== 'function') {\n    if (scopedTheme && !scopedTheme.vars) {\n      finalTheme = _extends({}, scopedTheme, {\n        vars: null\n      });\n    } else if (themeInput && !themeInput.vars) {\n      finalTheme = _extends({}, themeInput, {\n        vars: null\n      });\n    }\n  }\n  return /*#__PURE__*/_jsx(SystemThemeProvider, _extends({}, props, {\n    themeId: scopedTheme ? THEME_ID : undefined,\n    theme: finalTheme\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? ThemeProvider.propTypes = {\n  /**\n   * Your component tree.\n   */\n  children: PropTypes.node,\n  /**\n   * A theme object. You can provide a function to extend the outer theme.\n   */\n  theme: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired\n} : void 0;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { GlobalStyles as SystemGlobalStyles } from '@mui/system';\nimport defaultTheme from '../styles/defaultTheme';\nimport THEME_ID from '../styles/identifier';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction GlobalStyles(props) {\n  return /*#__PURE__*/_jsx(SystemGlobalStyles, _extends({}, props, {\n    defaultTheme: defaultTheme,\n    themeId: THEME_ID\n  }));\n}\nprocess.env.NODE_ENV !== \"production\" ? GlobalStyles.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The styles you want to apply globally.\n   */\n  styles: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.array, PropTypes.func, PropTypes.number, PropTypes.object, PropTypes.string, PropTypes.bool])\n} : void 0;\nexport default GlobalStyles;","'use client';\n\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDefaultProps } from '../DefaultPropsProvider';\nimport GlobalStyles from '../GlobalStyles';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const html = (theme, enableColorScheme) => _extends({\n  WebkitFontSmoothing: 'antialiased',\n  // Antialiasing.\n  MozOsxFontSmoothing: 'grayscale',\n  // Antialiasing.\n  // Change from `box-sizing: content-box` so that `width`\n  // is not affected by `padding` or `border`.\n  boxSizing: 'border-box',\n  // Fix font resize problem in iOS\n  WebkitTextSizeAdjust: '100%'\n}, enableColorScheme && !theme.vars && {\n  colorScheme: theme.palette.mode\n});\nexport const body = theme => _extends({\n  color: (theme.vars || theme).palette.text.primary\n}, theme.typography.body1, {\n  backgroundColor: (theme.vars || theme).palette.background.default,\n  '@media print': {\n    // Save printer ink.\n    backgroundColor: (theme.vars || theme).palette.common.white\n  }\n});\nexport const styles = (theme, enableColorScheme = false) => {\n  var _theme$components;\n  const colorSchemeStyles = {};\n  if (enableColorScheme && theme.colorSchemes) {\n    Object.entries(theme.colorSchemes).forEach(([key, scheme]) => {\n      var _scheme$palette;\n      colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\\s*&/, '')] = {\n        colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode\n      };\n    });\n  }\n  let defaultStyles = _extends({\n    html: html(theme, enableColorScheme),\n    '*, *::before, *::after': {\n      boxSizing: 'inherit'\n    },\n    'strong, b': {\n      fontWeight: theme.typography.fontWeightBold\n    },\n    body: _extends({\n      margin: 0\n    }, body(theme), {\n      // Add support for document.body.requestFullScreen().\n      // Other elements, if background transparent, are not supported.\n      '&::backdrop': {\n        backgroundColor: (theme.vars || theme).palette.background.default\n      }\n    })\n  }, colorSchemeStyles);\n  const themeOverrides = (_theme$components = theme.components) == null || (_theme$components = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components.styleOverrides;\n  if (themeOverrides) {\n    defaultStyles = [defaultStyles, themeOverrides];\n  }\n  return defaultStyles;\n};\n\n/**\n * Kickstart an elegant, consistent, and simple baseline to build upon.\n */\nfunction CssBaseline(inProps) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiCssBaseline'\n  });\n  const {\n    children,\n    enableColorScheme = false\n  } = props;\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(GlobalStyles, {\n      styles: theme => styles(theme, enableColorScheme)\n    }), children]\n  });\n}\nprocess.env.NODE_ENV !== \"production\" ? CssBaseline.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * You can wrap a node.\n   */\n  children: PropTypes.node,\n  /**\n   * Enable `color-scheme` CSS property to use `theme.palette.mode`.\n   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme\n   * For browser support, check out https://caniuse.com/?search=color-scheme\n   * @default false\n   */\n  enableColorScheme: PropTypes.bool\n} : void 0;\nexport default CssBaseline;","import { red } from \"@mui/material/colors\"\nimport { createTheme } from \"@mui/material/styles\"\n\nconst theme = createTheme({\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 600,\n      md: 960,\n      lg: 1280,\n      xl: 1920,\n    },\n  },\n  typography: {\n    subtitle1: {\n      color: \"#7D7987\",\n    },\n    h4: {\n      fontSize: \"2.125rem\",\n      \"@media (max-width:600px)\": {\n        fontSize: \"1.5rem\",\n      },\n    },\n    h5: {\n      fontSize: \"1.5rem\",\n      \"@media (max-width:600px)\": {\n        fontSize: \"1.25rem\",\n      },\n    },\n    h6: {\n      fontSize: \"1.25rem\",\n      \"@media (max-width:600px)\": {\n        fontSize: \"1.125rem\",\n      },\n    },\n  },\n  palette: {\n    mode: \"light\",\n    primary: {\n      main: \"#458FF6\",\n    },\n    error: {\n      main: red.A400,\n    },\n    background: {\n      default: \"#fff\",\n    },\n    text: {\n      primary: \"#000\",\n      secondary: \"#7D7987\",\n      disabled: \"#CCC\",\n    },\n  },\n  shape: {\n    borderRadius: 20,\n  },\n  components: {\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          \"@media (max-width:600px)\": {\n            fontSize: \"0.875rem\",\n            padding: \"8px 16px\",\n          },\n        },\n      },\n    },\n    MuiCard: {\n      styleOverrides: {\n        root: {\n          \"@media (max-width:600px)\": {\n            margin: \"8px\",\n          },\n        },\n      },\n    },\n  },\n})\n\nexport default theme\n","import React from \"react\"\nimport Grid from \"@mui/material/Grid\"\nimport Typography from \"@mui/material/Typography\"\nimport Button from \"@mui/material/Button\"\nimport ArrowDownwardIcon from \"@mui/icons-material/ArrowDownward\"\nimport Image from \"./image\"\nimport Hidden from \"@mui/material/Hidden\"\nimport Bar from \"./bar\"\nimport { useTheme } from \"@mui/material/styles\"\nimport { useMediaQuery } from \"@mui/material\"\n\nconst AppsPanel = () => {\n  const theme = useTheme()\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"))\n\n  const handleDownloadClick = () => {\n    console.log(\"Download button clicked\")\n    alert(\"Download feature coming soon!\")\n  }\n\n  return (\n    <div id=\"apps\">\n      <Grid\n        container\n        spacing={isMobile ? 2 : 3}\n        style={{\n          minHeight: isMobile ? 400 : 500,\n          padding: isMobile ? \"20px 10px\" : \"40px 20px\",\n        }}\n      >\n        <Grid\n          item={true}\n          xs={12}\n          sm={6}\n          container\n          flexDirection=\"column\"\n          justifyContent=\"center\"\n          alignItems={isMobile ? \"center\" : \"flex-start\"}\n          style={{\n            paddingLeft: isMobile ? 20 : 40,\n            paddingRight: isMobile ? 20 : 40,\n            textAlign: isMobile ? \"center\" : \"left\",\n          }}\n        >\n          <Typography\n            variant=\"h4\"\n            color=\"inherit\"\n            style={{\n              fontSize: isMobile ? \"1.75rem\" : \"2.125rem\",\n              marginBottom: 10,\n            }}\n          >\n            Download our mobile apps\n          </Typography>\n          <Bar />\n          <Typography\n            variant=\"subtitle1\"\n            style={{\n              marginBottom: 30,\n              marginTop: 20,\n              fontSize: isMobile ? \"1rem\" : \"1.25rem\",\n            }}\n          >\n            Our dedicated patient engagement app and web portal allow you to\n            access information instantaneously (no tedious form, long calls, or\n            administrative hassle) and securely\n          </Typography>\n          <Button\n            variant=\"outlined\"\n            color=\"primary\"\n            size={isMobile ? \"medium\" : \"large\"}\n            endIcon={<ArrowDownwardIcon />}\n            onClick={handleDownloadClick}\n          >\n            Download\n          </Button>\n        </Grid>\n\n        <Hidden xsDown>\n          <Grid\n            item={true}\n            sm={6}\n            container\n            flexDirection=\"column\"\n            justifyContent=\"center\"\n            alignItems=\"flex-start\"\n            style={{ padding: 10 }}\n          >\n            <div style={{ width: \"100%\" }}>\n              <Image\n                alt=\"Virtual Healthcare for you\"\n                filename=\"apps-panel-image.png\"\n              />\n            </div>\n          </Grid>\n        </Hidden>\n      </Grid>\n    </div>\n  )\n}\n\nexport default AppsPanel\n","import React from \"react\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Hero from \"../components/hero\"\nimport Services from \"../components/services\"\nimport AboutPanel from \"../components/about-panel\"\nimport Testimonials from \"../components/testimonials\"\nimport Articles from \"../components/articles\"\nimport { ThemeProvider } from \"@mui/material/styles\"\nimport CssBaseline from \"@mui/material/CssBaseline\"\nimport theme from \"../theme\"\nimport AppsPanel from \"../components/apps-panel\"\n\nconst IndexPage = () => (\n  <React.Fragment>\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n      <Layout>\n        <SEO title=\"Home\" />\n        <Hero />\n        <Services />\n        <AboutPanel />\n        <AppsPanel />\n        {/* <Testimonials /> */}\n        <Articles />\n      </Layout>\n    </ThemeProvider>\n  </React.Fragment>\n)\n\nexport default IndexPage\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m20 12-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8z\"\n}), 'ArrowDownward');"],"names":["W","hasNativeLazyLoadSupport","HTMLImageElement","prototype","_","e","t","a","Boolean","images","fallback","src","gatsbyImageData","gatsbyImage","childImageSharp","z","i","s","width","height","className","style","P","h","loading","shouldLoad","opacity","A","r","n","o","l","backgroundColor","position","top","left","bottom","right","objectFit","objectPosition","d","transition","H","F","_ref5","layout","paddingTop","maxWidth","display","alt","role","G","children","u","V","B","U","srcSet","decoding","Y","sources","sizes","length","map","_ref6","media","type","key","X","propTypes","isRequired","displayName","J","Z","Error","K","Q","ee","te","replace","ae","_len","arguments","Array","_key","c","apply","concat","ie","image","se","re","ne","Set","oe","le","de","as","class","g","onStartLoad","p","onLoad","m","onError","f","w","y","b","v","E","k","S","M","N","$","JSON","stringify","I","then","_ref7","renderImageToString","swapPlaceholderImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","add","has","_ref8","innerHTML","isLoading","isLoaded","requestAnimationFrame","cancelAnimationFrame","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","ce","he","ue","__imageData","__error","console","warn","ge","imgClassName","imgStyle","placeholder","pe","_len2","_key2","me","fe","we","UPPERCASE","LOWERCASE","LEADING_CAPITAL","IDENTIFIER","SEPARATORS","LEADING_SEPARATORS","RegExp","source","SEPARATORS_AND_IDENTIFIER","NUMBERS_AND_IDENTIFIER","camelCase","input","options","isArray","TypeError","pascalCase","preserveConsecutiveUppercase","x","trim","filter","join","toLowerCase","locale","string","toLocaleLowerCase","toUpperCase","toLocaleUpperCase","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","test","slice","preserveCamelCase","lastIndex","m1","charAt","identifier","postProcess","module","exports","_interopRequireDefault","_createSvgIcon","_jsxRuntime","default","jsx","_ref","filename","useStaticQuery","edges","find","node","relativePath","name","React","alignItems","justifyContent","fontSize","color","getImage","GatsbyImage","Hero","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","Grid","container","spacing","minHeight","padding","item","xs","sm","flexDirection","paddingLeft","paddingRight","textAlign","Typography","variant","marginBottom","Button","size","onClick","handleConsultClick","log","alert","Hidden","xsDown","Image","getCardUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","CardRoot","styled","Paper","overridesResolver","props","styles","root","overflow","inProps","raised","other","ownerState","classes","composeClasses","useUtilityClasses","clsx","elevation","undefined","getCardContentUtilityClass","CardContentRoot","paddingBottom","component","service","Card","CardContent","title","description","getDividerUtilityClass","DividerRoot","absolute","light","orientation","vertical","flexItem","withChildren","withChildrenVertical","textAlignRight","textAlignLeft","margin","flexShrink","borderWidth","borderStyle","borderColor","vars","palette","divider","borderBottomWidth","dividerChannel","marginLeft","marginRight","marginTop","borderRightWidth","alignSelf","whiteSpace","border","borderTopStyle","borderLeftStyle","content","borderTop","borderLeft","DividerWrapper","wrapper","wrapperVertical","Divider","slots","muiSkipListHighlight","StyledDivider","background","Bar","Box","Services","id","md","ServiceCard","handleLearnMoreClick","AboutPanel","getCardActionsUtilityClass","CardActionsRoot","disableSpacing","article","CardActions","handleReadMoreClick","ArrowRightAltIcon","Articles","url","ArticleCard","handleViewAllClick","Symbol","for","localTheme","outerTheme","output","mergeOuterLocalTheme","nested","Provider","value","wrapGlobalLayer","serialized","match","themeId","defaultTheme","upperTheme","resolvedTheme","globalStyles","modularCssLayers","styleArg","EMPTY_THEME","useThemeScoping","isPrivate","mergedTheme","result","useThemeWithoutDefault","upperPrivateTheme","engineTheme","privateTheme","rtlValue","direction","layerOrder","useId","useEnhancedEffect","head","document","firstChild","_firstChild$hasAttrib","hasAttribute","call","getAttribute","styleElement","createElement","setAttribute","textContent","prepend","_head$querySelector","remove","useLayerOrder","RtlProvider","components","themeInput","scopedTheme","finalTheme","html","enableColorScheme","WebkitFontSmoothing","MozOsxFontSmoothing","boxSizing","WebkitTextSizeAdjust","colorScheme","mode","body","text","primary","typography","body1","common","white","_theme$components","colorSchemeStyles","colorSchemes","Object","entries","forEach","scheme","_scheme$palette","getColorSchemeSelector","defaultStyles","fontWeight","fontWeightBold","themeOverrides","MuiCssBaseline","styleOverrides","createTheme","values","lg","xl","subtitle1","h4","h5","h6","main","error","red","A400","secondary","disabled","shape","borderRadius","MuiButton","MuiCard","AppsPanel","endIcon","ArrowDownwardIcon","handleDownloadClick","IndexPage","ThemeProvider","CssBaseline","Layout","SEO"],"sourceRoot":""}